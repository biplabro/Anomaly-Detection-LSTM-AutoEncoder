import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# import keras
from keras.layers import LSTM, Dense
from keras.models import Sequential
from keras.callbacks import EarlyStopping

# read in univariate timeseries data
data = pd.read_csv('data.csv')

# define train and test sets
train_start_index = 0
train_end_index = int(0.7*len(data))
test_start_index = train_end_index + 1
test_end_index = len(data)

x_train = data.iloc[train_start_index:train_end_index, :]
x_test = data.iloc[test_start_index:test_end_index, :]

# define model architecture
model = Sequential()
model.add(LSTM(10, input_shape=(1, 1)))
model.add(Dense(1))
model.compile(optimizer="adam", loss="mean_squared_error")





=================================================================





# Importing necessary libraries
import tensorflow as tf 
from tensorflow.keras.models import Sequential 
from tensorflow.keras.layers import Dense, LSTM, TimeDistributed, Flatten, RepeatVector

# Initializing model
model = Sequential()

# Adding layers
model.add(LSTM(16, activation='relu', input_shape=(None, 7)))
model.add(RepeatVector(3))
model.add(LSTM(16, activation='relu', return_sequences=True))
model.add(TimeDistributed(Dense(7, activation='sigmoid')))
model.add(Flatten())

# Compiling model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Fitting model
model.fit(X_train, y_train, epochs=10)







